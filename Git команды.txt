git config --global user.name "Your Name" 			- глобальная установка имени
git config --global user.email "your_email@whatever.com" 	- глобальная установка адреса эл. почты


git init 			- создания нового репозитория. 

git clone <repos> <repos_clone>	- клонирование репозитория <repos> в каталог <repos_clone>
git clone --bare <file> <file>.git - cоздаtn чистый репозиторий( <file>.git ) репозитория
				  ( <file> ).

git remote			- показывает имя по умолчанию удаленного репозитория(origin).
git remote -v			- показывает все подключенные удаленные репозитории.
git remote show origin		- показывает подробную инфу удаленного репозитория(origin).
git remote add <name> <url> 	- добавит чистый удаленный репозиторий, находящийся по адресу
				  <url> и записанный под именим <name>.

git push <name> <branch>	- отправка изменений ветки <branch>, в удаленный чистый
				  репозиторий с иминем <name>.
git push -u <name> <branch>	- отправка изменений ветки <branch>, в удаленный чистый
				  репозиторий с иминем <name> и связывание локального и
				  удаленного репозитория.

git branch			- показывает список веток локального репозитория.
git branch -a			- показывает список веток локального и удаленного репозиториев.
git branch --track <branch> origin/<branch> - Добавьте локальную ветку( <branch> ), 
				  которая отслеживает удаленную ветку( origin/<branch> ).
git branch --set-upstream-to=origin/<branch> - связывает локальную ветку с удаленной <branch>.

git fetch			- извлекает изменения из удаленного репозитория.

git pull <name>	<branch>	- извлекает изменения из удаленного репозитория и
				  производит слияние локальной(master) и
				  удаленной(origin/master) ветки.

git add <file>			- индексация всего проэкта или одного файла
git commit -m "First "Commit"	- сохранение изменений или КОММИТ изменений
git commit --amend 		- перезапись последнего коммита(перед этим git add.)
git commit --amend -m "Commit"	- заменить комментарий последнего Коммита

git rm <file>			- удалит файл <file> из коммита и из каталога.
				  (после нужно git commit --amend )
git rm --cached readme.txt 	- удалить файл из отслеживаемых (файл останется на месте)
git rm --cached -r folder 	- удалить папку из отслеживаемых (папка останется на месте)
git rm --cashed <file>		- удалит файл <file> из коммита, но делает его неотслеживаемым.
				  (после нужно git commit --amend )

git diff			- показывает не проиндексированные измениния.
git diff --staged		- показывает проиндексированные измениния.

git status			- проверка состояния репозитория
git log(hist)			- получение списка произведенных изменений
git hist master --all		- получение списка всех коммитов проэкта вне зависимости
				  местоположения.
git show <Hash>			- показывает изменения данного Коммита по Хешу.

git checkout <branch>		- переходит на выбранную ветку, либо выбранный коммит
git checkout master		- отменяет последние не проиндексированные изменения
git checkout <file>		- отменяет не проиндексированные изменения в файле.
git checkout <Hash> <file>	- изменяет файл, на тот что был в коммите <Hash>.
git checkout -b <New_branch>	- создание новой ветки <New_branch>.
git checkout -b <branch> <Hash>	- создание новой ветки <branch> из коммита <Hash>.

git merge <branch> -m "Commit"	- слияние двух веток. Ветка <branch> вливается в текущую
				  ветку.
git merge origin/master		- слияние локальной(master) и удаленной(origin/master) ветки.

git reset HEAD <file>		- снимает индексацию с файла <file>.
git reset --hard <Hash>		- отбрасывает ветку до выбранного Коммита. Но ничего не
				  удаляется.

git revert HEAD			- отменяет последний сохраненный Коммит. после выполнения
				  команды откроется редактор в котором можно поменять
				  сообщение нового коммита.
git revert <Hash>		- отменяет любого сохраненного Коммита. после выполнения
				  команды откроется редактор в котором можно поменять
				  сообщение нового коммита.

git cat-file -p <Hash>		- показывает содержимое Коммита <Hash> в
				  человекочитаемом формате.

git tag <tag>			- создание Тега на коммите, в котором сейчас находитесь
git tag -d <tag>		- удаление выбранного Тега Коммита из истории.

git mv <file> <folder>		- перенести файли <file> в папку <folder>

ls 				- показывает все файлы в данном каталоге
ls -C .git			- показывает содержимое .git каталока, в котором хранятся
				  все материалы git.

cat <file>			- показывает состояние выбранного файла
cat .git/config			- файл конфигурации, данного проекта.
cat ~/.gitconfig		- глобальный файл конфигурации, всех проектов.
